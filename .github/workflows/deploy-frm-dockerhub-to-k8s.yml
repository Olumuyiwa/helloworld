name: Deploy to GKE
# This is the trigger for the workflow
on:
  push:
    branches:
      - deploy-frm-dockerhub-to-k8s # Only trigger on pushes to the deploy-to-k8s branch

env:
  REGISTRY: ${{ secrets.DOCKER_HUB_USERNAME }}

jobs:
  build:
    # This is the job name
    runs-on: ubuntu-latest  # The job will run on the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3   # Check out the repository code

      - name: Set up gcloud auth

        # Set up Google Cloud authentication
        # Use the GCP service account key stored in GitHub secrets
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up Java Development Kit version 17
      # Specify the Java version
      # Specify the JDK distribution
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build the project using Maven
      - name: Build with Maven
        run: mvn package

      # Set up Docker Buildx for building multi-platform Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        # Uses a pre-built GitHub Action to log in to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}      # Docker Hub username from GitHub secrets
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  # Docker Hub token from GitHub secrets

      - name: Build and push Docker image
        # Building and pushing the Docker image
        # the name of the image is docker.io/myusername/helloworld
        # the tag of the image is latest
        run: |
          docker build -t ${{ env.REGISTRY }}/helloworld:latest .  
          docker push ${{ env.REGISTRY }}/helloworld:latest   

  deploy:
    needs: build
    runs-on: ubuntu-latest    # The job will run on the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Check out the repository code

      - name: Set up gcloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gke-gcloud-auth-plugin
        # Update the package list
        # Install required packages
        # Add Google Cloud SDK repository
        # Add Google's apt key
        # Update the package list again
        # Install Google Cloud SDK and GKE auth plugin

        run: |
          
          sudo apt-get update            
          sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk google-cloud-cli-gke-gcloud-auth-plugin



      # Configure kubectl to use the GKE cluster in the specified region
      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials staging-autopilot-cluster --region us-west1

      # Deploying the Docker image to the Kubernetes cluster
      # Apply the Kubernetes deployment configuration
      - name: Deploy to GKE
        run: |
          
          kubectl apply -f k8s/deployment.yml   
          kubectl apply -f k8s/service.yml
